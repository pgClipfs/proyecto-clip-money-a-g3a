{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routes.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/shared/footer/footer.component.ts","webpack:///src/app/components/shared/footer/footer.component.html","webpack:///src/app/components/shared/home/home.component.ts","webpack:///src/app/components/shared/home/home.component.html","webpack:///src/app/components/shared/login/login.component.ts","webpack:///src/app/components/shared/login/login.component.html","webpack:///src/app/components/shared/navbar/navbar.component.ts","webpack:///src/app/components/shared/navbar/navbar.component.html","webpack:///src/app/components/shared/register/register.component.ts","webpack:///src/app/components/shared/register/register.component.html","webpack:///src/app/components/shared/register2/register2.component.ts","webpack:///src/app/components/shared/register2/register2.component.html","webpack:///src/app/components/shared/sidenav/sidenav.component.ts","webpack:///src/app/components/shared/sidenav/sidenav.component.html","webpack:///src/app/helpers/error.interceptor.ts","webpack:///src/app/helpers/jwt.interceptor.ts","webpack:///src/app/material.modules.ts","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/values.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","APP_ROUTES","path","component","pathMatch","redirectTo","APP_ROUTING","forRoot","routes","AppRoutingModule","imports","AppComponent","title","hide","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","FooterComponent","anio","Date","HomeComponent","valuesService","getAll","subscribe","v","values","LoginComponent","route","router","authenticationService","error","usernameControl","required","passwordControl","returnUrl","snapshot","queryParams","console","log","value","login","data","navigate","onSubmit","NavbarComponent","RegisterComponent","Register2Component","registerName","registerLastName","registerEmail","registerDni","registerHome","registerTelephone","registerUser","registerPassword","registerbirthdate","SidenavComponent","showFiller","ErrorInterceptor","next","handle","pipe","err","status","logout","location","reload","message","statusText","providedIn","JwtInterceptor","currentUser","currentUserValue","token","clone","setHeaders","Authorization","MaterialModule","AuthenticationService","http","currentUserSubject","JSON","parse","localStorage","getItem","asObservable","username","password","post","apiUrl","user","setItem","stringify","removeItem","ValuesService","get","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { RouterModule, Routes} from '@angular/router';\r\nimport { HomeComponent } from './components/shared/home/home.component';\r\nimport { LoginComponent } from './components/shared/login/login.component';\r\nimport { RegisterComponent } from './components/shared/register/register.component';\r\nimport { Register2Component } from './components/shared/register2/register2.component';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst APP_ROUTES: Routes = [\r\n    { path: 'home', component: HomeComponent },\r\n    { path: 'login', component: LoginComponent},\r\n    { path: 'register', component: RegisterComponent },\r\n    { path: 'register2', component: Register2Component },\r\n    { path: '**', pathMatch: 'full', redirectTo: 'home' },\r\n\r\n];\r\n\r\nexport const APP_ROUTING = RouterModule.forRoot( APP_ROUTES);\r\n\r\n// , { useHash : true} //\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './components/shared/home/home.component'\r\nimport { LoginComponent } from './components/shared/login/login.component';\r\nimport { AuthGuard } from './helpers/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  // { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n  // { path: 'login', component: LoginComponent },\r\n  // { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.sass']\r\n})\r\nexport class AppComponent {\r\n  title = 'clip-money-front';\r\n  hide = true;\r\n}\r\n\r\n","<app-navbar></app-navbar>\r\n<app-sidenav></app-sidenav>\r\n\r\n<div class=\"container main-container\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n\r\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/shared/navbar/navbar.component';\r\nimport { FooterComponent } from './components/shared/footer/footer.component';\r\nimport { LoginComponent } from './components/shared/login/login.component';\r\nimport { HomeComponent } from './components/shared/home/home.component';\r\nimport { RegisterComponent } from './components/shared/register/register.component';\r\nimport { Register2Component } from './components/shared/register2/register2.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { JwtInterceptor } from './helpers/jwt.interceptor';\r\nimport { ErrorInterceptor } from './helpers/error.interceptor';\r\nimport {FormControl} from \"@angular/forms\";\r\n// materials //\r\nimport {MaterialModule} from '../app/material.modules';\r\n\r\n\r\n\r\n\r\n\r\n// Routes //\r\n\r\nimport {APP_ROUTING} from './app-routes';\r\nimport { SidenavComponent } from './components/shared/sidenav/sidenav.component';\r\n\r\n\r\n// services //\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    FooterComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    Register2Component,\r\n    SidenavComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    APP_ROUTING\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.sass']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  anio: Date;\r\n\r\n  constructor() {\r\n    this.anio = new Date();\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"footer bg-dark\">\r\n\r\n    <div class=\"container\">\r\n\r\n        <p>\r\n            &copy; E-Wallet {{ anio }}\r\n        </p>\r\n    </div>\r\n</footer>","import { Component, OnInit } from '@angular/core';\r\nimport { Cliente } from 'src/app/models/cliente';\r\nimport { ValuesService } from 'src/app/services/values.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.sass']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n    values: Cliente[];\r\n\r\n    constructor(private valuesService: ValuesService) { }\r\n\r\n    ngOnInit(): void {\r\n      this.valuesService.getAll().subscribe(v => {\r\n        this.values = v;\r\n      });\r\n    }\r\n\r\n  }\r\n","<p>home works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.sass']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  returnUrl: string;\r\n  error = '';\r\n  usernameControl = new FormControl('', Validators.required);\r\n  passwordControl = new FormControl('', Validators.required);\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/';\r\n    console.log(\"aca se esta creando\");\r\n  }\r\n\r\n\r\n  onSubmit(): void {\r\n    console.log(\"llamamos a la funcion onsubmit\");\r\n    console.log(\"el usuario es\" + this.usernameControl.value);\r\n    console.log(\"contraseña es \" + this.passwordControl.value);\r\n    // despues borrar todos los console.log\r\n\r\n    this.authenticationService.login(this.usernameControl.value, this.passwordControl.value)\r\n      .subscribe(\r\n          data => {\r\n              this.router.navigate([this.returnUrl]);\r\n              console.log(\"paso el usuario y contraseña\");\r\n        },\r\n        error => {\r\n            this.error = error;\r\n          }\r\n        );\r\n  }\r\n}\r\n","<div class=\"example-container card animated fadeIn\">\r\n\r\n    <div class=\"col\" >\r\n      <form  (ngSubmit)=\"onSubmit()\">\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>Usuario</mat-label>\r\n            <input matInput placeholder=\"Escriba el Usuario \" [formControl]=\"usernameControl\">\r\n            <!--<mat-hint>Errors appear instantly!</mat-hint>-->\r\n          </mat-form-field>\r\n        <br>\r\n        <br>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Contraseña</mat-label>\r\n          <input matInput type=\"password\" placeholder=\"**************\" [formControl]=\"passwordControl\" >\r\n          <!--<mat-hint>Errors appear instantly!</mat-hint>-->\r\n        </mat-form-field>\r\n        <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\r\n          <br>\r\n          <br>\r\n          <label>\r\n            <input type=\"checkbox\" checked=\"checked\" name=\"remember\"> Recordar cuenta\r\n          </label>\r\n          <div id=\"div-boton-login\">\r\n            <button id=\"boton-login\" type=\"button\" mat-flat-button color=\"primary\" class=\"btn btn-outline-primary\" (click)=\"onSubmit()\">Ingresar</button>\r\n          </div>\r\n          <br>\r\n          <label>\r\n            <a class=\"\"[routerLink] = \"['../register']\">Registrarse</a>\r\n          </label>\r\n          <br>\r\n          <label>\r\n            ¿Olvidaste tu contraseña? <a href=\"#\">Clik Aqui</a>\r\n          </label>\r\n      </form>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.sass']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <a class=\"navbar-brand\" href=\"#\">E-Wallet</a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav mr-auto\">\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\" [routerLink]=\"['home']\">Home <span class=\"sr-only\">(current)</span></a>\r\n                </li>\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\" [routerLink]=\"['register2']\">Registrarse</a>\r\n                </li>\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\" [routerLink]=\"['login']\">Ingresar</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.sass']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"example-container card animated fadeIn\">\r\n\r\n    <!-- Primer Fila -->\r\n    <div class=\"row\">\r\n\r\n        <div class=\"col\">\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Nombre</mat-label>\r\n                <input class=\"input2\" matInput placeholder=\"Nombre\">\r\n                <!--<mat-hint>Errors appear instantly!</mat-hint>-->\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col\">\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Apellido</mat-label>\r\n                <input class=\"input2\" matInput placeholder=\"Apellido\">\r\n                <!--<mat-hint>Errors appear instantly!</mat-hint>-->\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Segunda Fila -->\r\n    <div class=\"row\">\r\n\r\n        <div class=\"col\">\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>D.N.I.</mat-label>\r\n                <input class=\"input2\" matInput placeholder=\"Escriba el Usuario \">\r\n                <!--<mat-hint>Errors appear instantly!</mat-hint>-->\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col\">\r\n\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Domicilio</mat-label>\r\n                <input class=\"input2\" matInput placeholder=\"Escriba el Usuario \">\r\n                <!--<mat-hint>Errors appear instantly!</mat-hint>-->\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Tercera Fila -->\r\n    <div class=\"row\">\r\n\r\n        <div class=\"col\">\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>E-Mail</mat-label>\r\n                <input class=\"input2\" matInput placeholder=\"E-Mail\" type=\"email\">\r\n                <!--<mat-hint>Errors appear instantly!</mat-hint>-->\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col\">\r\n\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Numero de telefono</mat-label>\r\n                <input class=\"input2\" matInput placeholder=\"Escriba el Usuario \" type=\"tel\">\r\n                <!--<mat-hint>Errors appear instantly!</mat-hint>-->\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- cuarta Fila -->\r\n    <div class=\"row\">\r\n\r\n        <div class=\"col\">\r\n\r\n            <mat-label>Foto del D.N.I.</mat-label>\r\n            <br>\r\n            <input type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\">\r\n            <!--<mat-hint>Errors appear instantly!</mat-hint>-->\r\n\r\n        </div>\r\n\r\n        <div class=\"col\">\r\n\r\n            <mat-label>Fecha de nacimiento</mat-label>\r\n            <br>\r\n            <input type=\"date\" id=\"birthday\" name=\"birthday\">\r\n            <!--<mat-hint>Errors appear instantly!</mat-hint>-->\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <br>\r\n    <br>\r\n\r\n    <!-- Quinta Fila -->\r\n    <div class=\"row\">\r\n\r\n        <div class=\"col\">\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Usuario</mat-label>\r\n                <input class=\"input2\" matInput placeholder=\"Escriba el Usuario \">\r\n                <!--<mat-hint>Errors appear instantly!</mat-hint>-->\r\n\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n\r\n        <div class=\"col\">\r\n            <mat-form-field appearance=\"fill\" class=\"example-full-width\">\r\n                <mat-label>Contraseña</mat-label>\r\n                <input class=\"input2\" matInput type=\"password\" placeholder=\"**************\">\r\n                <!--<mat-hint>Errors appear instantly!</mat-hint>-->\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col\">\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>Repetir Contraseña</mat-label>\r\n                <input class=\"input2\" matInput type=\"password\" placeholder=\"**************\">\r\n                <!--<mat-hint>Errors appear instantly!</mat-hint>-->\r\n            </mat-form-field>\r\n        </div>\r\n    </div>\r\n    <br>\r\n    <br>\r\n\r\n\r\n    <!-- Sexta Linea -->\r\n\r\n    <div id=\"sexta\">\r\n        <label>\r\n            <input type=\"checkbox\" checked=\"checked\" name=\"Enviar copia de Registro a la casilla de correos\"> Enviar copia de Registro\r\n        </label>\r\n        <br>\r\n        <label>\r\n                    <input type=\"checkbox\" checked=\"checked\" name=\"Acepto los terminos y condiciones\"> Acepto los terminos y condiciones\r\n        </label>\r\n        <br>\r\n        <br>\r\n\r\n        <div id=\"div-boton-login\">\r\n            <button id=\"boton-login\" type=\"submit\" mat-flat-button class=\"btn btn-outline-primary \">Limpiar valores</button>\r\n        </div>\r\n        <br>\r\n        <div id=\"div-boton-login\">\r\n            <button id=\"boton-login\" type=\"submit\" mat-flat-button color=\"primary\" class=\"btn btn-outline-primary \">Registrarme</button>\r\n        </div>\r\n        <div>\r\n            <br>\r\n            <br>\r\n            <br>\r\n            <br>\r\n            <br>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-register2',\r\n  templateUrl: './register2.component.html',\r\n  styleUrls: ['./register2.component.sass']\r\n})\r\n\r\nexport class Register2Component implements OnInit {\r\n  returnUrl: string;\r\n  error = '';\r\n  registerName = new FormControl('', Validators.required);\r\n  registerLastName = new FormControl('', Validators.required);\r\n  registerEmail = new FormControl('', Validators.required);\r\n  registerDni = new FormControl('', Validators.required);\r\n  registerHome = new FormControl('', Validators.required);\r\n  registerTelephone = new FormControl('', Validators.required);\r\n  registerUser = new FormControl('', Validators.required);\r\n  registerPassword = new FormControl('', Validators.required);\r\n  registerbirthdate = new FormControl('', Validators.required);\r\n\r\n\r\n  hide = true;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  onSubmit(): void {\r\n    console.log(\"llamamos a la funcion onsubmit\");\r\n    console.log(this.registerName.value,\r\n      this.registerLastName.value,\r\n      this.registerEmail.value,\r\n      this.registerDni.value,\r\n      this.registerHome.value,\r\n      this.registerTelephone.value,\r\n      this.registerUser.value,\r\n      this.registerPassword.value,\r\n      this.registerbirthdate.value);\r\n\r\n    // despues borrar todos los console.log\r\n\r\n\r\n  }\r\n\r\n}\r\n","<mat-grid-list cols=\"1\" rowHeight=\"1300px\" class=\"example-container card animated fadeIn\">\r\n  <mat-grid-tile>\r\n    <div class=\"example-container\">\r\n      <br>\r\n      <h1>Nuevo usuario</h1>\r\n      <hr>\r\n      <form  (ngSubmit)=\"onSubmit()\">\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"width-50\">\r\n          <mat-label>Nombre</mat-label>\r\n          <input matInput [formControl]=\"registerName\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"width-50 ml-2\">\r\n          <mat-label>Apellido</mat-label>\r\n          <input matInput [formControl]=\"registerLastName\">\r\n        </mat-form-field>\r\n          <!-- ------------------- EMAIL---------------------------------- -->\r\n        <br>\r\n        <mat-form-field appearance=\"fill\" class=\"width-100\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"Ex. pat@example.com\" [formControl]=\"registerEmail\">\r\n        </mat-form-field>\r\n        <br>\r\n        <!-- -------------------DNI---------------------------------- -->\r\n        <br>\r\n        <mat-form-field appearance=\"fill\" class=\"width-100\">\r\n          <mat-label>DNI</mat-label>\r\n            <input matInput placeholder=\"EJ: 12.345.678\" [formControl]=\"registerDni\">\r\n          </mat-form-field>\r\n          <br>\r\n        <!-- ---------------------DOMICILIO-------------------------------- -->\r\n        <br>\r\n        <mat-form-field appearance=\"fill\" class=\"width-100\">\r\n          <mat-label>Domicilio</mat-label>\r\n            <input matInput placeholder=\"Ej: Calle 123 Barrio\" [formControl]=\"registerHome\">\r\n          </mat-form-field>\r\n          <br>\r\n        <!-- ---------------------Telefono-------------------------------- -->\r\n        <br>\r\n        <mat-form-field appearance=\"fill\" class=\"width-100\">\r\n          <mat-label>Numero de telefono personal</mat-label>\r\n          <input matInput placeholder=\"Ej: 123456789\" type=\"tel\" [formControl]=\"registerTelephone\">\r\n        </mat-form-field>\r\n        <br>\r\n        <hr>\r\n        <!-- ---------------------Usuario-------------------------------- -->\r\n        <br>\r\n        <mat-form-field appearance=\"fill\" class=\"width-100\">\r\n          <mat-label>Usuario</mat-label>\r\n          <input matInput placeholder=\"Ej: usuario123\" [formControl]=\"registerUser\">\r\n        </mat-form-field>\r\n        <br>\r\n        <!-- ---------------------Contraseña-------------------------------- -->\r\n\r\n        <mat-form-field appearance=\"fill\" class=\"width-100\">\r\n          <mat-label>Contraseña</mat-label>\r\n            <input matInput [type]=\"hide ? 'password' : 'text'\" [formControl]=\"registerPassword\">\r\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n            </button>\r\n          </mat-form-field>\r\n          <br>\r\n          <!-- --------------------- repetir Contraseña-------------------------------- -->\r\n\r\n          <mat-form-field appearance=\"fill\" class=\"width-100\">\r\n            <mat-label>Repetir Contraseña</mat-label>\r\n            <input matInput [type]=\"hide ? 'password' : 'text'\" >\r\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n\r\n        <!-- --------------------- Elegir sexo----------------- QUITAR (NO CORRESPONDE)--------------- -->\r\n\r\n        <!-- --------------------- Elegir fecha de nacimiento y Foto del-------------------------------- -->\r\n\r\n        <label id=\"example-radio-group-label\">Fecha de nacimiento: </label>\r\n        <br><br>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Elige una fecha</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" [formControl]=\"registerbirthdate\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n          </mat-form-field>\r\n        <br>\r\n        <mat-label>Foto del DNI</mat-label>\r\n        <br><br>\r\n        <!--button type=\"button primary block\">Elije la foto</!--button-->\r\n        <input type=\"file\" id=\"file\">\r\n        <br><br><br><br>\r\n        <label>\r\n          <input type=\"checkbox\" checked=\"checked\" name=\"Enviar copia de Registro a la casilla de correos\"> Enviar copia de Registro\r\n        </label>\r\n        <br>\r\n        <label>\r\n          <input type=\"checkbox\" checked=\"checked\" name=\"Acepto los terminos y condiciones\"> Acepto los terminos y condiciones\r\n        </label>\r\n        <br>\r\n        <div id=\"div-boton-login\">\r\n          <button id=\"boton-login\" type=\"submit\" mat-flat-button class=\"btn btn-outline-primary \">Limpiar valores</button>\r\n        </div>\r\n        <br>\r\n        <div id=\"div-boton-login\">\r\n          <button id=\"boton-login\" type=\"submit\" mat-flat-button color=\"primary\" class=\"btn btn-outline-primary \" (click)=\"onSubmit()\">Registrarme</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </mat-grid-tile>\r\n</mat-grid-list>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n/**\r\n * @title Autosize sidenav\r\n */\r\n\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.sass']\r\n})\r\nexport class SidenavComponent {\r\n  showFiller = false;\r\n}\r\n","<mat-drawer-container class=\"example-container\" autosize>\r\n  <mat-drawer #drawer class=\"example-sidenav\" mode=\"side\">\r\n    <p>Auto-resizing sidenav</p>\r\n    <p *ngIf=\"showFiller\">Lorem, ipsum dolor sit amet consectetur.</p>\r\n    <button class=\"botonsin\" (click)=\"showFiller = !showFiller\" mat-raised-button>\r\n      Consultar Saldo\r\n    </button>\r\n    <br>\r\n    <br>\r\n    <button class=\"botonsin\"(click)=\"showFiller = !showFiller\" mat-raised-button>\r\n      Ingresar Efectivo\r\n    </button>\r\n    <br>\r\n    <br>\r\n    <button class=\"botonsin\" (click)=\"showFiller = !showFiller\" mat-raised-button>\r\n      Retirar Efectivo\r\n    </button>\r\n  </mat-drawer>\r\n\r\n  <div class=\"example-sidenav-content\">\r\n    <button class=\"boton_panel\" type=\"button\" mat-button (click)=\"drawer.toggle()\">\r\n    ↑\r\n    </button>\r\n  </div>\r\n\r\n</mat-drawer-container>","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authenticationService: AuthenticationService ) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(catchError(err => {\r\n      if (err.status === 401) {\r\n        this.authenticationService.logout();\r\n        location.reload();\r\n      }\r\n\r\n      const error = err.error.message || err.statusText;\r\n      return throwError(error);\r\n    }));\r\n  }\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authenticationService: AuthenticationService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const currentUser = this.authenticationService.currentUserValue;\r\n    if (currentUser && currentUser.token) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${currentUser.token}`\r\n        }\r\n      });\r\n    }\r\n\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\n\r\n\r\n\r\n@NgModule({\r\n\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    MatSliderModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatChipsModule,\r\n    MatButtonModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatGridListModule,\r\n    MatSidenavModule\r\n  ],\r\n  exports: [\r\n  BrowserAnimationsModule,\r\n  MatSliderModule,\r\n  MatFormFieldModule,\r\n  MatSelectModule,\r\n  MatInputModule,\r\n  MatChipsModule,\r\n  MatButtonModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatIconModule,\r\n  MatRadioModule,\r\n  MatGridListModule,\r\n  MatSidenavModule\r\n\r\n  ]\r\n})\r\n\r\nexport class MaterialModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { User } from '../models/user';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  private currentUserSubject: BehaviorSubject<User>;\r\n  public currentUser: Observable<User>;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): User {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    //const pass = bcrypt.hashSync(password);\r\n\r\n    return this.http.post<any>(`${environment.apiUrl}/api/login/authenticate`, { username, password })\r\n      .pipe(map(user => {\r\n        localStorage.setItem('currentUser', JSON.stringify(user));\r\n        this.currentUserSubject.next(user);\r\n        return user;\r\n      }));\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('currentUser');\r\n    this.currentUserSubject.next(null);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValuesService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll(): Observable<any> {\r\n    return this.http.get<any>(`${environment.apiUrl}/api/default`);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:56624'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}